<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>de.gedoplan</groupId>
    <artifactId>build-master</artifactId>
    <version>2022.10.1</version>
    <relativePath/>
  </parent>

  <groupId>de.gedoplan.showcase.next-lvl</groupId>
  <artifactId>pimp-jee</artifactId>
  <version>1.0-SNAPSHOT</version>

  <packaging>war</packaging>

  <properties>
    <java.code.version>17</java.code.version>
  </properties>

  <repositories>
    <repository>
      <id>gedoplanPublic</id>
      <url>https://service.gedoplan.de/nexus/content/groups/public</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>8.0</version>
      <scope>provided</scope>
    </dependency>

    <!--
      After migrating to Jakarta EE:
      - remove all javax and jakarta dependencies above
      - activate the jakarta platfrom dependency below
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>10.0.0</version>
      <scope>provided</scope>
    </dependency>
    -->

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.30</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>package</defaultGoal>
    <finalName>${project.artifactId}</finalName>
  </build>

  <profiles>

    <!--
    Profile for upgrading the sources from JEE 8 to JEE 9+
    Run it with mvn -PtoJakarta rewrite:run

    After the upgrade, adjust this file by
    - including the dependency jakarta.jakartaee-api to 10.0.0
    - removing all other jakarta.* dependencies
    -->
    <profile>
      <id>toJakarta</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openrewrite.maven</groupId>
            <artifactId>rewrite-maven-plugin</artifactId>
            <version>5.7.1</version>
            <configuration>
              <activeRecipes>
                <recipe>org.openrewrite.java.migrate.jakarta.JavaxMigrationToJakarta</recipe>
                <recipe>org.openrewrite.java.migrate.jakarta.JavaxPersistenceXmlToJakartaPersistenceXml</recipe>
              </activeRecipes>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.openrewrite.recipe</groupId>
                <artifactId>rewrite-migrate-java</artifactId>
                <version>2.1.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
    Profile for using WildFly Bootable Jar
    
    For building an additional WildFly hollow jar, run mvn -PwflyJar package,
    and start the application with java -jar target/wildfly-bootable.jar -&#45;deployment=target/pimp-jee.war.

    Alternativly run the application in Dev Mode: mvn -pwflyJar wildfly-jar:dev-watch.

    Note: WildFly 29 is a Jakarta EE 10 server, so you must migrate the project first!
    -->
    <profile>
      <id>wflyJar</id>
      <properties>
        <wildfly.bootable.jar.version>10.0.0.Final</wildfly.bootable.jar.version>
        <wildfly.version>29.0.1.Final</wildfly.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-jar-maven-plugin</artifactId>
            <version>${wildfly.bootable.jar.version}</version>
            <configuration>
              <feature-packs>
                <feature-pack>
                  <location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</location>
                </feature-pack>
              </feature-packs>
              <layers>
                <layer>jaxrs</layer>
                <layer>cdi</layer>
                <layer>jpa</layer>
                <layer>h2-default-datasource</layer>
              </layers>
              <excluded-layers>
                <layer>deployment-scanner</layer>
              </excluded-layers>
              <plugin-options>
                <jboss-maven-dist/>
              </plugin-options>
              <hollow-jar>true</hollow-jar>
              <output-file-name>wildfly-bootable.jar</output-file-name>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>package</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>

      </build>
    </profile>
  </profiles>
</project>
